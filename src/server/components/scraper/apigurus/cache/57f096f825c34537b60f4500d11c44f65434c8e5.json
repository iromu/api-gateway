{
  "basePath": "/v1/",
  "externalDocs": {
    "url": "http://instagr.am/developer/"
  },
  "host": "api.instagram.com",
  "info": {
    "description": "Fast, beautiful and fun way to share your life with friends through a series of pictures.",
    "title": "Instagram",
    "version": "1.0.0",
    "x-logo": {
      "url": "https://instagramstatic-a.akamaihd.net/bluebar/8a8f88c/images/press/brand-thumb-icon.jpg"
    },
    "x-origin": {
      "format": "apigee",
      "url": "https://apigee.com/embed/console/instagram"
    },
    "x-providerName": "instagram.com"
  },
  "paths": {
    "/locations/{location-id}": {
      "get": {
        "description": "Get information about a location.",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/locations/#get_locations"
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      },
      "parameters": [
        {
          "description": "The ID of the location to reference.",
          "in": "path",
          "name": "location-id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/locations/{location-id}/media/recent": {
      "get": {
        "description": "Get a list of recent media objects from a given location.",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/locations/#get_locations_media_recent"
        },
        "parameters": [
          {
            "description": "Return media after this max_id",
            "in": "query",
            "name": "max_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Return media before this min_id",
            "in": "query",
            "name": "min_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Return media after this UNIX timestamp",
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": -9223372036854776000,
            "name": "min_timestamp",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Return media before this UNIX timestamp",
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": -9223372036854776000,
            "name": "max_timestamp",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      },
      "parameters": [
        {
          "description": "The ID of the location to reference.",
          "in": "path",
          "name": "location-id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/locations/search": {
      "get": {
        "description": "Search for a location by name and geographic coordinate.",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/locations/#get_locations_search"
        },
        "parameters": [
          {
            "description": "Latitude of the center search coordinate. If used, lng is required.",
            "in": "query",
            "name": "lat",
            "required": false,
            "type": "string"
          },
          {
            "description": "Longitude of the center search coordinate. If used, lat is required.",
            "in": "query",
            "name": "lng",
            "required": false,
            "type": "string"
          },
          {
            "description": "Returns a location mapped off of a foursquare v1 api location id. If used, you are not required to use lat and lng. Note that this method is deprecated; you should use the new foursquare IDs with V2 of their API.",
            "in": "query",
            "name": "foursquare_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Returns a location mapped off of a foursquare v2 api location id. If used, you are not required to use lat and lng.",
            "in": "query",
            "name": "foursquare_v2_id",
            "required": false,
            "type": "string"
          },
          {
            "default": 1000,
            "description": "Search distance, in meters. Default is 1km (distance=1000), max distance is 5km (5000)",
            "in": "query",
            "minimum": 1,
            "name": "distance",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      },
      "parameters": []
    },
    "/media/{id}": {
      "get": {
        "description": "Get information about a media object.",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/media/#get_media"
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      },
      "parameters": [
        {
          "description": "The ID of the media object to reference.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/media/{media-id}/comments": {
      "get": {
        "description": "Get a full list of comments on a media. Required scope: comments",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/comments/#get_media_comments"
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      },
      "parameters": [
        {
          "description": "The ID of the media object to reference.",
          "in": "path",
          "name": "media-id",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "Create a comment on a media. Required scope: comments",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/comments/#post_media_comments"
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      }
    },
    "/media/{media-id}/comments/{comment-id}": {
      "delete": {
        "description": "Remove a comment either on the authenticated user's media or authored by the authenticated user. Required scope: comments",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/comments/#delete_media_comments"
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      },
      "parameters": [
        {
          "description": "The ID of the media object to reference.",
          "in": "path",
          "name": "media-id",
          "required": true,
          "type": "string"
        },
        {
          "description": "The ID of the comment to delete.",
          "in": "path",
          "name": "comment-id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/media/{media-id}/likes": {
      "delete": {
        "description": "Remove a like on this media by the currently authenticated user. Required scope: likes",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/likes/#delete_media_likes"
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      },
      "get": {
        "description": "Get a list of users who have liked this media. Required scope: likes",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/likes/#get_media_likes"
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      },
      "parameters": [
        {
          "description": "The ID of the media object to reference.",
          "in": "path",
          "name": "media-id",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "Set a like on this media by the currently authenticated user. Required scope: likes",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/likes/#post_media_likes"
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      }
    },
    "/media/popular": {
      "get": {
        "description": "Get a list of what media is most popular at the moment.",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/media/#get_media_popular"
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      },
      "parameters": []
    },
    "/media/search": {
      "get": {
        "description": "Get information about a media object.",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/media/#get_media_search"
        },
        "parameters": [
          {
            "description": "Latitude of the center search coordinate. If used, lng is required.",
            "in": "query",
            "name": "lat",
            "required": false,
            "type": "number"
          },
          {
            "description": "Longitude of the center search coordinate. If used, lat is required.",
            "in": "query",
            "name": "lng",
            "required": false,
            "type": "number"
          },
          {
            "description": "A unix timestamp. All media returned will be taken earlier than this timestamp.",
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": -9223372036854776000,
            "name": "max_timestamp",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A unix timestamp. All media returned will be taken later than this timestamp.",
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": -9223372036854776000,
            "name": "min_timestamp",
            "required": false,
            "type": "integer"
          },
          {
            "default": 1000,
            "description": "Search distance, in meters. Default is 1km (distance=1000), max distance is 5km (5000)",
            "in": "query",
            "minimum": 1,
            "name": "distance",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      },
      "parameters": []
    },
    "/subscriptions": {
      "delete": {
        "description": "Deletes a subscription by object type or ID.",
        "externalDocs": {
          "url": "http://instagr.am/developer/realtime"
        },
        "parameters": [
          {
            "description": "The ID of the subscription you want to delete. Either this or \"object\" is required.",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "description": "The object type of the subscription you want to delete, or \"all\" to clear all subscriptions.",
            "enum": [
              "all",
              "user",
              "tag",
              "location",
              "geography"
            ],
            "in": "query",
            "name": "object",
            "required": false,
            "type": "string"
          },
          {
            "description": "Client ID of your application.",
            "in": "query",
            "name": "client_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Client secret of your application.",
            "in": "query",
            "name": "client_secret",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      },
      "get": {
        "description": "Returns your current subscriptions.",
        "externalDocs": {
          "url": "http://instagr.am/developer/realtime"
        },
        "parameters": [
          {
            "description": "Client ID of your application.",
            "in": "query",
            "name": "client_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Client secret of your application.",
            "in": "query",
            "name": "client_secret",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      },
      "parameters": [],
      "post": {
        "description": "Creates a subscription to receive notifications when a new photos are posted in an arbitrary geographical location as defined by a center point and radius.",
        "externalDocs": {
          "url": "http://instagr.am/developer/realtime"
        },
        "parameters": [
          {
            "in": "query",
            "name": "verify_token",
            "required": true,
            "type": "string"
          },
          {
            "description": "Client ID of your application.",
            "in": "query",
            "name": "client_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Client secret of your application.",
            "in": "query",
            "name": "client_secret",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      }
    },
    "/tags/{tag-name}": {
      "get": {
        "description": "Get information about a tag object.",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/tags/#get_tags"
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      },
      "parameters": [
        {
          "description": "The name of the tag to reference.",
          "in": "path",
          "name": "tag-name",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/tags/{tag-name}/media/recent": {
      "get": {
        "description": "Get a list of recently tagged media.",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/tags/#get_tags_media_recent"
        },
        "parameters": [
          {
            "description": "Return media after this max_id",
            "in": "query",
            "name": "max_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Return media before this min_id",
            "in": "query",
            "name": "min_id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      },
      "parameters": [
        {
          "description": "The name of the tag to reference.",
          "in": "path",
          "name": "tag-name",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/tags/search": {
      "get": {
        "description": "Search for tags by name.",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/tags/#get_tags_search"
        },
        "parameters": [
          {
            "description": "Valid tag name without a leading #. (eg. snow, nofilter)",
            "in": "query",
            "name": "q",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      },
      "parameters": []
    },
    "/users/{user-id}": {
      "get": {
        "description": "Get basic information about a user.",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/users/#get_users"
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      },
      "parameters": [
        {
          "description": "The ID of the user whose information to retrieve, or \"self\" to reference the currently logged-in user.",
          "in": "path",
          "name": "user-id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/users/{user-id}/followed-by": {
      "get": {
        "description": "Get the list of users this user is followed by. Required scope: relationships",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/relationships/#get_users_followed_by"
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      },
      "parameters": [
        {
          "description": "The ID of the user to reference.",
          "in": "path",
          "name": "user-id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/users/{user-id}/follows": {
      "get": {
        "description": "Get the list of users this user follows. Required scope: relationships",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/relationships/#get_users_follows"
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      },
      "parameters": [
        {
          "description": "The ID of the user to reference.",
          "in": "path",
          "name": "user-id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/users/{user-id}/media/recent": {
      "get": {
        "description": "Get the most recent media published by a user.",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/users/#get_users_media_recent"
        },
        "parameters": [
          {
            "description": "Return media earlier than this max_id",
            "in": "query",
            "name": "max_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Return media later than this min_id",
            "in": "query",
            "name": "min_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Count of media to return",
            "in": "query",
            "minimum": 1,
            "name": "count",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Return media after this UNIX timestamp",
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": -9223372036854776000,
            "name": "min_timestamp",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Return media before this UNIX timestamp",
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": -9223372036854776000,
            "name": "max_timestamp",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      },
      "parameters": [
        {
          "description": "The ID of the user whose recent media to retrieve.",
          "in": "path",
          "name": "user-id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/users/{user-id}/relationship": {
      "get": {
        "description": "Get information about the current user's relationship (follow/following/etc) to another user. Required scope: relationships",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/relationships/#get_relationship"
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      },
      "parameters": [
        {
          "description": "The ID of the user to reference.",
          "in": "path",
          "name": "user-id",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "Modify the relationship between the current user and the target user. Required scope: relationships",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/relationships/#post_relationship"
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      }
    },
    "/users/search": {
      "get": {
        "description": "Search for a user by name.",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/users/#get_users_search"
        },
        "parameters": [
          {
            "description": "A query string.",
            "in": "query",
            "name": "q",
            "required": true,
            "type": "string"
          },
          {
            "description": "Number of users to return",
            "in": "query",
            "minimum": 1,
            "name": "count",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      },
      "parameters": []
    },
    "/users/self/feed": {
      "get": {
        "description": "See the authenticated user's feed.",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/users/#get_users_feed"
        },
        "parameters": [
          {
            "description": "Return media earlier than this max_id",
            "in": "query",
            "name": "max_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Return media later than this min_id",
            "in": "query",
            "name": "min_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Count of media to return",
            "in": "query",
            "minimum": 1,
            "name": "count",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      },
      "parameters": []
    },
    "/users/self/media/liked": {
      "get": {
        "description": "See the authenticated user's list of media they've liked.",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/users/#get_users_liked_feed"
        },
        "parameters": [
          {
            "description": "Return media liked before this id",
            "in": "query",
            "name": "max_like_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Count of media to return",
            "in": "query",
            "minimum": 1,
            "name": "count",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      },
      "parameters": []
    },
    "/users/self/requested-by": {
      "get": {
        "description": "List the users who have requested this user's permission to follow. Required scope: relationships",
        "externalDocs": {
          "url": "http://instagr.am/developer/endpoints/relationships/#get_incoming_requests"
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      },
      "parameters": []
    }
  },
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "oauth2": {
      "authorizationUrl": "https://api.instagram.com/oauth/authorize/",
      "flow": "implicit",
      "scopes": {
        "likes": "",
        "relationships": ""
      },
      "type": "oauth2"
    }
  },
  "swagger": "2.0"
}
