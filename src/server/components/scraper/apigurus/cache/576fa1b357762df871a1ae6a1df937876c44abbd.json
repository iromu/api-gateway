{
  "basePath": "/app",
  "definitions": {
    "Link": {
      "properties": {
        "href": {
          "type": "string"
        },
        "rel": {
          "type": "string"
        },
        "templated": {
          "type": "boolean"
        }
      }
    },
    "RestErrorDTO": {
      "description": "RestErrorDTO",
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer"
        },
        "developerMessage": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "moreInfoUrl": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "Void": {},
    "WebServiceAccount": {
      "description": "WebServiceAccount",
      "properties": {
        "creditBalance": {
          "format": "double",
          "type": "number"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        }
      }
    },
    "WebServiceContact": {
      "description": "WebServiceContact",
      "properties": {
        "contactId": {
          "format": "int64",
          "type": "integer"
        },
        "contactNumber": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "WebServiceContactLink": {
      "description": "WebServiceContactLink",
      "properties": {
        "contactId": {
          "format": "int64",
          "type": "integer"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        }
      }
    },
    "WebServiceContacts": {
      "description": "WebServiceContacts",
      "properties": {
        "links": {
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "webServiceContacts": {
          "items": {
            "$ref": "#/definitions/WebServiceContact"
          },
          "type": "array"
        }
      }
    },
    "WebServiceGroup": {
      "description": "WebServiceGroup",
      "properties": {
        "groupId": {
          "format": "int64",
          "type": "integer"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "WebServiceGroups": {
      "description": "WebServiceGroups",
      "properties": {
        "links": {
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "webServiceGroups": {
          "items": {
            "$ref": "#/definitions/WebServiceGroup"
          },
          "type": "array"
        }
      }
    },
    "WebServiceMessage": {
      "description": "WebServiceMessage",
      "properties": {
        "campaign": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/WebServiceContactLink"
        },
        "creditCost": {
          "format": "double",
          "type": "number"
        },
        "dateTimeReceived": {
          "format": "date-time",
          "type": "string"
        },
        "dateTimeScheduled": {
          "format": "date-time",
          "type": "string"
        },
        "dateTimeSent": {
          "format": "date-time",
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "fromNumber": {
          "type": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "message": {
          "type": "string"
        },
        "messageId": {
          "format": "int64",
          "type": "integer"
        },
        "messageStatus": {
          "type": "string"
        },
        "messageType": {
          "type": "string"
        },
        "numberOfMessages": {
          "format": "int32",
          "type": "integer"
        },
        "read": {
          "type": "boolean"
        },
        "toNumber": {
          "type": "string"
        },
        "userDataField": {
          "type": "string"
        }
      }
    },
    "WebServiceMessages": {
      "description": "WebServiceMessages",
      "properties": {
        "elements": {
          "format": "int32",
          "type": "integer"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "totalElements": {
          "format": "int64",
          "type": "integer"
        },
        "totalPages": {
          "format": "int32",
          "type": "integer"
        },
        "webServiceMessages": {
          "items": {
            "$ref": "#/definitions/WebServiceMessage"
          },
          "type": "array"
        }
      }
    },
    "WebServiceNumberContextLookupRequest": {
      "description": "WebServiceNumberContextLookupRequest",
      "properties": {
        "links": {
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "numbers": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "WebServiceNumberContextLookupResponse": {
      "description": "WebServiceNumberContextLookupResponse",
      "properties": {
        "links": {
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "number": {
          "type": "string"
        },
        "numberValid": {
          "type": "boolean"
        }
      }
    },
    "WebServiceSendSmsRequest": {
      "description": "WebServiceSendSmsRequest",
      "properties": {
        "campaign": {
          "type": "string"
        },
        "dataField": {
          "type": "string"
        },
        "dateToSend": {
          "format": "date-time",
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "recipientNumber": {
          "type": "string"
        }
      }
    },
    "WebServiceSendSmsRequests": {
      "description": "WebServiceSendSmsRequests",
      "properties": {
        "defaultDateToSend": {
          "format": "date-time",
          "type": "string"
        },
        "messagesPerMinute": {
          "format": "int32",
          "type": "integer"
        },
        "sendSmsRequests": {
          "items": {
            "$ref": "#/definitions/WebServiceSendSmsRequest"
          },
          "type": "array"
        }
      }
    },
    "WebServiceSendSmsResponse": {
      "description": "WebServiceSendSmsResponse",
      "properties": {
        "error": {
          "type": "string"
        },
        "messageId": {
          "type": "string"
        }
      }
    },
    "WebServiceSendSmsResponses": {
      "description": "WebServiceSendSmsResponses",
      "properties": {
        "sendSmsResponses": {
          "items": {
            "$ref": "#/definitions/WebServiceSendSmsResponse"
          },
          "type": "array"
        }
      }
    },
    "WebServiceTemplate": {
      "description": "WebServiceTemplate",
      "properties": {
        "data": {
          "type": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "templateId": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "WebServiceTemplates": {
      "description": "WebServiceTemplates",
      "properties": {
        "links": {
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array"
        },
        "webServiceTemplates": {
          "items": {
            "$ref": "#/definitions/WebServiceTemplate"
          },
          "type": "array"
        }
      }
    }
  },
  "host": "www.zoomconnect.com",
  "info": {
    "description": "The world's greatest SMS API",
    "title": "Zoom Connect",
    "version": "1",
    "x-logo": {
      "url": "http://zoomconnect.com/assets/logo.png"
    },
    "x-origin": {
      "format": "swagger",
      "url": "https://www.zoomconnect.com/zoom/api-docs",
      "version": "1.2"
    },
    "x-providerName": "zoomconnect.com"
  },
  "paths": {
    "/api/rest/v1/account/balance": {
      "get": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "deprecated": false,
        "description": "Returns your account's credit balance",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WebServiceAccount"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "balance",
        "tags": [
          "balance"
        ]
      }
    },
    "/api/rest/v1/contacts/{contactId}": {
      "delete": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "deprecated": false,
        "description": "Deletes a  contact",
        "parameters": [
          {
            "description": "contactId",
            "format": "int64",
            "in": "path",
            "name": "contactId",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Description was not specified"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "delete",
        "tags": [
          "contacts"
        ]
      },
      "get": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "deprecated": false,
        "description": "Returns details for a single contact",
        "parameters": [
          {
            "description": "contactId",
            "format": "int64",
            "in": "path",
            "name": "contactId",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebServiceContact"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "get",
        "tags": [
          "contacts"
        ]
      }
    },
    "/api/rest/v1/contacts/all": {
      "get": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "deprecated": false,
        "description": "Returns all contacts",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebServiceContacts"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "all",
        "tags": [
          "contacts"
        ]
      }
    },
    "/api/rest/v1/context/lookup": {
      "get": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "deprecated": false,
        "description": "Returns context information for a single provided",
        "parameters": [
          {
            "description": "number",
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WebServiceNumberContextLookupResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "lookup",
        "tags": [
          "lookup"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "deprecated": false,
        "description": "Returns context information for a single provided",
        "parameters": [
          {
            "description": "number",
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WebServiceNumberContextLookupResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "lookup",
        "tags": [
          "lookup"
        ]
      }
    },
    "/api/rest/v1/groups/{groupId}": {
      "delete": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "deprecated": false,
        "description": "Deletes a  group",
        "parameters": [
          {
            "description": "groupId",
            "format": "int64",
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Description was not specified"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "delete",
        "tags": [
          "groups"
        ]
      },
      "get": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "deprecated": false,
        "description": "Returns details for a single group",
        "parameters": [
          {
            "description": "groupId",
            "format": "int64",
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebServiceGroup"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "get",
        "tags": [
          "groups"
        ]
      }
    },
    "/api/rest/v1/groups/all": {
      "get": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "deprecated": false,
        "description": "Returns all groups",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebServiceGroups"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "all",
        "tags": [
          "groups"
        ]
      }
    },
    "/api/rest/v1/messages/{messageId}": {
      "delete": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "deprecated": false,
        "description": "Deletes a  message",
        "parameters": [
          {
            "description": "messageId",
            "format": "int64",
            "in": "path",
            "name": "messageId",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Description was not specified"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "delete",
        "tags": [
          "messages"
        ]
      },
      "get": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "deprecated": false,
        "description": "Returns details for a single message",
        "parameters": [
          {
            "description": "messageId",
            "format": "int64",
            "in": "path",
            "name": "messageId",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebServiceMessage"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "get",
        "tags": [
          "messages"
        ]
      }
    },
    "/api/rest/v1/messages/all": {
      "get": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "deprecated": false,
        "description": "Returns all messages",
        "parameters": [
          {
            "default": 100,
            "description": "number of elements to return at a time",
            "format": "int32",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "default": 1,
            "description": "page number",
            "format": "int32",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "filter by message type",
            "enum": [
              "OUTBOUND",
              "INBOUND"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string"
          },
          {
            "description": "filter by message status",
            "enum": [
              "SCHEDULED",
              "UNKNOWN",
              "SENT",
              "FAILED",
              "FAILED_REFUNDED",
              "FAILED_OPTOUT",
              "DELIVERED",
              "RECEIVED"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "description": "date format: yyyyMMdd",
            "format": "date-time",
            "in": "query",
            "name": "fromDateTimeSent",
            "required": false,
            "type": "string"
          },
          {
            "description": "date format: yyyyMMdd",
            "format": "date-time",
            "in": "query",
            "name": "toDateTimeSent",
            "required": false,
            "type": "string"
          },
          {
            "description": "date format: yyyyMMdd",
            "format": "date-time",
            "in": "query",
            "name": "fromDateTimeReceived",
            "required": false,
            "type": "string"
          },
          {
            "description": "date format: yyyyMMdd",
            "format": "date-time",
            "in": "query",
            "name": "toDateTimeReceived",
            "required": false,
            "type": "string"
          },
          {
            "description": "phone number the message was sent from",
            "in": "query",
            "name": "fromNumber",
            "required": false,
            "type": "string"
          },
          {
            "description": "phone number the message was sent to",
            "in": "query",
            "name": "toNumber",
            "required": false,
            "type": "string"
          },
          {
            "description": "search matching message text",
            "in": "query",
            "name": "message",
            "required": false,
            "type": "string"
          },
          {
            "description": "search by campaign",
            "in": "query",
            "name": "campaign",
            "required": false,
            "type": "string"
          },
          {
            "description": "search by data field",
            "in": "query",
            "name": "dataField",
            "required": false,
            "type": "string"
          },
          {
            "description": "return only deleted / not deleted messages",
            "in": "query",
            "name": "deleted",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "return only read / unread messages (inbox messages only)",
            "in": "query",
            "name": "read",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebServiceMessages"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "all",
        "tags": [
          "messages"
        ]
      }
    },
    "/api/rest/v1/sms/send": {
      "get": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "deprecated": false,
        "description": "Returns an example of the data to POST to send a single message.",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebServiceSendSmsRequest"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "send",
        "tags": [
          "sms"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "deprecated": false,
        "description": "Sends a single message. The <i>recipientNumber</i> and <i>message</i> fields are required. All other fields are optional.",
        "parameters": [
          {
            "description": "request",
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WebServiceSendSmsRequest"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Description was not specified",
            "schema": {
              "$ref": "#/definitions/WebServiceSendSmsResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Validation error</br></br>Code and message:<ul><li>2 - Invalid mobile number</li><li>3 - Message cannot be empty</li></ul>",
            "schema": {
              "$ref": "#/definitions/RestErrorDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "send",
        "tags": [
          "sms"
        ]
      }
    },
    "/api/rest/v1/sms/send-bulk": {
      "get": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "deprecated": false,
        "description": "Returns an example of the data to POST to send multiple messages in one transaction.",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebServiceSendSmsRequests"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "send-bulk",
        "tags": [
          "sms"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "deprecated": false,
        "description": "Send multiple messages in one transaction.",
        "parameters": [
          {
            "description": "requests",
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WebServiceSendSmsRequests"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Description was not specified",
            "schema": {
              "$ref": "#/definitions/WebServiceSendSmsResponses"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "send-bulk",
        "tags": [
          "sms"
        ]
      }
    },
    "/api/rest/v1/sms/send-url-parameters": {
      "get": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "deprecated": false,
        "description": "Send a single message using URL parameters.The <i>recipientNumber</i> and <i>message</i> parameters are required. All other parameters are optional.",
        "parameters": [
          {
            "description": "the phone number of the recipient to send to",
            "in": "query",
            "name": "recipientNumber",
            "required": true,
            "type": "string"
          },
          {
            "description": "the message to send",
            "in": "query",
            "name": "message",
            "required": true,
            "type": "string"
          },
          {
            "description": "date format: yyyyMMddHHmm",
            "format": "date-time",
            "in": "query",
            "name": "dateToSend",
            "required": false,
            "type": "string"
          },
          {
            "description": "optional campaign name",
            "in": "query",
            "name": "campaign",
            "required": false,
            "type": "string"
          },
          {
            "description": "optional extra data",
            "in": "query",
            "name": "dataField",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "send-url-parameters",
        "tags": [
          "sms"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "deprecated": false,
        "description": "Send a single message using URL parameters.The <i>recipientNumber</i> and <i>message</i> parameters are required. All other parameters are optional.",
        "parameters": [
          {
            "description": "the phone number of the recipient to send to",
            "in": "query",
            "name": "recipientNumber",
            "required": true,
            "type": "string"
          },
          {
            "description": "the message to send",
            "in": "query",
            "name": "message",
            "required": true,
            "type": "string"
          },
          {
            "description": "date format: yyyyMMddHHmm",
            "format": "date-time",
            "in": "query",
            "name": "dateToSend",
            "required": false,
            "type": "string"
          },
          {
            "description": "optional campaign name",
            "in": "query",
            "name": "campaign",
            "required": false,
            "type": "string"
          },
          {
            "description": "optional extra data",
            "in": "query",
            "name": "dataField",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Description was not specified",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "send-url-parameters",
        "tags": [
          "sms"
        ]
      }
    },
    "/api/rest/v1/templates/{templateId}": {
      "delete": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "deprecated": false,
        "description": "Deletes a  template",
        "parameters": [
          {
            "description": "templateId",
            "format": "int64",
            "in": "path",
            "name": "templateId",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Description was not specified"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "delete",
        "tags": [
          "templates"
        ]
      },
      "get": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "deprecated": false,
        "description": "Returns details for a single template",
        "parameters": [
          {
            "description": "templateId",
            "format": "int64",
            "in": "path",
            "name": "templateId",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebServiceTemplate"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "get",
        "tags": [
          "templates"
        ]
      }
    },
    "/api/rest/v1/templates/all": {
      "get": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "deprecated": false,
        "description": "Returns all templates",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebServiceTemplates"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "all",
        "tags": [
          "templates"
        ]
      }
    }
  },
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "tags": [
    {
      "description": "Core information related to your account",
      "name": "balance"
    },
    {
      "description": "Number context service",
      "name": "lookup"
    },
    {
      "description": "Send and schedule messages",
      "name": "sms"
    },
    {
      "description": "Manage your contacts",
      "name": "contacts"
    },
    {
      "description": "Manage your groups",
      "name": "groups"
    },
    {
      "description": "Manage your messages",
      "name": "messages"
    },
    {
      "description": "Manage your templates",
      "name": "templates"
    }
  ]
}
