{
  "basePath": "/core/v2/rest",
  "definitions": {
    "discount": {
      "properties": {
        "amountPercent": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "totalPrice": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object",
      "xml": {
        "name": "discount"
      }
    },
    "infos": {
      "xml": {
        "name": "infos"
      }
    },
    "items": {
      "properties": {},
      "xml": {
        "name": "items"
      }
    },
    "License": {
      "properties": {
        "active": {
          "description": "If set to false, the license is disabled. License can be re-enabled, but as long as it is disabled, the license is excluded from the validation process.",
          "type": "boolean"
        },
        "currency": {
          "description": "specifies currency for the license price. Check data types to discover which currencies are supported. Read-only, set from license template on creation.",
          "type": "string"
        },
        "hidden": {
          "description": "If set to true, this license is not shown in NetLicensing Shop as purchased license. Set from license template on creation, if not specified explicitly.",
          "type": "boolean"
        },
        "name": {
          "description": "Name for the licensed item. Set from license template on creation, if not specified explicitly.",
          "type": "string"
        },
        "number": {
          "description": "Unique number (across all products/licensees of a vendor) that identifies the license. Vendor can assign this number when creating a license or let NetLicensing generate one. Read-only after corresponding creation transaction status is set to closed.",
          "type": "string"
        },
        "price": {
          "description": "price for the license. If >0, it must always be accompanied by the currency specification. Read-only, set from license template on creation.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object",
      "xml": {
        "name": "license"
      }
    },
    "Licensee": {
      "properties": {
        "active": {
          "description": "If set to false, the licensee is disabled. Licensee can not obtain new licenses, and validation is disabled.",
          "type": "boolean"
        },
        "number": {
          "description": "Unique number (across all products of a vendor) that identifies the licensee. Vendor can assign this number when creating a licensee or let NetLicensing generate one. Read-only after creation of the first license for the licensee.",
          "type": "string"
        }
      },
      "type": "object",
      "xml": {
        "name": "licensee"
      }
    },
    "LicenseTemplate": {
      "properties": {
        "active": {
          "description": "If set to false, the license template is disabled. Licensee can not obtain any new licenses off this license template.",
          "type": "boolean"
        },
        "automatic": {
          "description": "If set to true, every new licensee automatically gets one license out of this license template on creation. Automatic licenses must have their price set to 0.",
          "type": "boolean"
        },
        "currency": {
          "description": "specifies currency for the license price. Check data types to discover which currencies are supported.",
          "type": "string"
        },
        "hidden": {
          "description": "If set to true, this license template is not shown in NetLicensing Shop as offered for purchase.",
          "type": "boolean"
        },
        "hiddenLicenses": {
          "description": "If set to true, licenses from this license template are not visible to the end customer, but participate in validation.",
          "type": "boolean"
        },
        "licenseType": {
          "description": "type of licenses created from this license template",
          "enum": [
            "FEATURE",
            "TIMEVOLUME"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name for the licensed item.",
          "type": "string"
        },
        "number": {
          "description": "Unique number (across all products of a vendor) that identifies the license template. Vendor can assign this number when creating a license template or let NetLicensing generate one. Read-only after creation of the first license from this license template.",
          "type": "string"
        },
        "price": {
          "description": "price for the license. If >0, it must always be accompanied by the currency specification.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object",
      "xml": {
        "name": "licensetemplate"
      }
    },
    "licensingModel": {
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "type": "object",
      "xml": {
        "name": "licensingModel"
      }
    },
    "netlicensing": {
      "properties": {
        "infos": {
          "$ref": "#/definitions/infos"
        },
        "items": {
          "$ref": "#/definitions/items"
        }
      },
      "xml": {
        "name": "netlicensing"
      }
    },
    "PaymentMethod": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "number": {
          "type": "string"
        }
      },
      "type": "object",
      "xml": {
        "name": "paymentmethod"
      }
    },
    "Product": {
      "properties": {
        "active": {
          "description": "If set to false, the product is disabled. No new licensees can be registered for the product, existing licensees can not obtain new licenses",
          "type": "boolean"
        },
        "licenseeAutoCreate": {
          "description": "If set to 'true', non-existing licensees will be created at first validation attempt.",
          "type": "boolean"
        },
        "name": {
          "description": "Product name. Together with the version identifies the product for the end customer",
          "type": "string"
        },
        "number": {
          "description": "Unique number that identifies the product. Vendor can assign this number when creating a product or let NetLicensing generate one. Read-only after creation of the first licensee for the product.",
          "type": "string"
        },
        "version": {
          "description": "Product version. Convenience parameter, additional to the product name.",
          "type": "string"
        }
      },
      "type": "object",
      "xml": {
        "name": "product"
      }
    },
    "ProductModule": {
      "properties": {
        "active": {
          "description": "If set to false, the product module is disabled. Licensees can not obtain any new licenses for this product module.",
          "type": "boolean"
        },
        "licensingInfo": {
          "description": "Licensing model applied to this product module. Defines what license templates can be configured for the product module and how licenses for this product module are processed during validation.",
          "type": "string"
        },
        "name": {
          "description": "Product module name that is visible to the end customers in NetLicensing Shop.",
          "type": "string"
        },
        "number": {
          "description": "Unique number (across all products of a vendor) that identifies the product module. Vendor can assign this number when creating a product module or let NetLicensing generate one. Read-only after creation of the first licensee for the product.",
          "type": "string"
        }
      },
      "type": "object",
      "xml": {
        "name": "productmodule"
      }
    },
    "Token": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "expirationTime": {
          "format": "date-time",
          "type": "string"
        },
        "licenseNumber": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "shopURL": {
          "type": "string"
        },
        "tokenType": {
          "type": "string"
        },
        "vensorNumber": {
          "type": "string"
        }
      },
      "type": "object",
      "xml": {
        "name": "token"
      }
    },
    "Transaction": {
      "properties": {
        "active": {
          "description": "Always true for the transactions",
          "type": "string"
        },
        "number": {
          "description": "Unique number (across all products of a vendor) that identifies the transaction. This number is always generated by NetLicensing.",
          "type": "string"
        },
        "source": {
          "enum": [
            "SHOP"
          ],
          "type": "string"
        },
        "status": {
          "enum": [
            "CANCELLED",
            "CLOSED",
            "PENDING"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "xml": {
        "name": "transaction"
      }
    }
  },
  "host": "netlicensing.labs64.com",
  "info": {
    "description": "The Labs64 <a href='https://www.labs64.de/confluence/x/pwCo' target='_blank'>NetLicensing API</a> is a RESTful API and gives you access to NetLicensing’s core features.<br/><br/><strong>Authentication</strong><br/>You authenticate to the NetLicensing API by providing your account credentials or simply use our demo account - <code>demo:demo</code><br/><br/>Find out more about Labs64 NetLicensing at <a href='http://netlicensing.io' target='_blank'>netlicensing.io</a>",
    "termsOfService": "https://www.labs64.com/legal/terms-of-service/netlicensing",
    "title": "Labs64 NetLicensing RESTful API",
    "version": "2.2.0",
    "x-logo": {
      "url": "http://draft-labs64.rhcloud.com/content/uploads/2015/06/labs64-logo.png"
    },
    "x-origin": {
      "format": "swagger",
      "url": "http://io.labs64.com/NetLicensing-API/v2.x/netlicensing.json",
      "version": "2.0"
    },
    "x-providerName": "labs64.com"
  },
  "paths": {
    "/license": {
      "get": {
        "description": "Return a list of all licenses for the current vendor",
        "operationId": "listLicenses",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "items": {
                "$ref": "#/definitions/netlicensing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Licenses list",
        "tags": [
          "License"
        ]
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "description": "Creates a new license",
        "operationId": "createLicense",
        "parameters": [
          {
            "in": "formData",
            "name": "licenseeNumber",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "licenseTemplateNumber",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "formData",
            "name": "number",
            "required": true,
            "type": "string"
          },
          {
            "description": "Name for the licensed item. Set from license template on creation, if not specified explicitly.",
            "in": "formData",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Mandatory for TIMEVOLUME licenseType and RENTAL licensingModel",
            "in": "formData",
            "name": "parentfeature",
            "required": false,
            "type": "string"
          },
          {
            "description": "Mandatory for TIMEVOLUME licenseType",
            "in": "formData",
            "name": "timeVolume",
            "required": false,
            "type": "string"
          },
          {
            "description": "Mandatory for TIMEVOLUME licenseType",
            "format": "date-time",
            "in": "formData",
            "name": "startDate",
            "required": false,
            "type": "string"
          },
          {
            "description": "Price for the license. If >0, it must always be accompanied by the currency specification. Read-only, set from license template on creation",
            "format": "double",
            "in": "formData",
            "name": "price",
            "required": false,
            "type": "number"
          },
          {
            "description": "Specifies currency for the license price. Check data types to discover which currencies are supported. Read-only, set from license template on creation",
            "in": "formData",
            "name": "currency",
            "required": false,
            "type": "string"
          },
          {
            "description": "If set to true, this license is not shown in NetLicensing Shop as purchased license. Set from license template on creation, if not specified explicitly",
            "in": "formData",
            "name": "hidden",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Create license",
        "tags": [
          "License"
        ]
      }
    },
    "/license/{licenseNumber}": {
      "delete": {
        "description": "Delete license by a licenseNumber",
        "operationId": "deleteLicense",
        "parameters": [
          {
            "description": "Unique number (across all products/licensees of a vendor) that identifies the license. Vendor can assign this number when creating a license or let NetLicensing generate one. Read-only after corresponding creation transaction status is set to closed.",
            "in": "path",
            "name": "licenseNumber",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Delete license",
        "tags": [
          "License"
        ]
      },
      "get": {
        "description": "Get license by a licenseNumber",
        "operationId": "getLicense",
        "parameters": [
          {
            "description": "Unique number (across all products/licensees of a vendor) that identifies the license. Vendor can assign this number when creating a license or let NetLicensing generate one. Read-only after corresponding creation transaction status is set to closed.",
            "in": "path",
            "name": "licenseNumber",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get license",
        "tags": [
          "License"
        ]
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "description": "Update license by a licenseNumber",
        "operationId": "updateLicense",
        "parameters": [
          {
            "description": "Unique number (across all products/licensees of a vendor) that identifies the license. Vendor can assign this number when creating a license or let NetLicensing generate one. Read-only after corresponding creation transaction status is set to closed.",
            "in": "path",
            "name": "licenseNumber",
            "required": true,
            "type": "string"
          },
          {
            "description": "Unique number (across all products/licensees of a vendor) that identifies the license. Vendor can assign this number when creating a license or let NetLicensing generate one. Read-only after corresponding creation transaction status is set to closed.",
            "in": "formData",
            "name": "number",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "active",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Name for the licensed item. Set from license template on creation, if not specified explicitly.",
            "in": "formData",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "for TIMEVOLUME licenseType",
            "format": "date-time",
            "in": "formData",
            "name": "startDate",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "parentfeature",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "timeVolume",
            "required": false,
            "type": "string"
          },
          {
            "description": "price for the license. If >0, it must always be accompanied by the currency specification. Read-only, set from license template on creation",
            "format": "double",
            "in": "formData",
            "name": "price",
            "required": false,
            "type": "number"
          },
          {
            "description": "specifies currency for the license price. Check data types to discover which currencies are supported. Read-only, set from license template on creation",
            "in": "formData",
            "name": "currency",
            "required": false,
            "type": "string"
          },
          {
            "description": " If set to true, this license is not shown in NetLicensing Shop as purchased license. Set from license template on creation, if not specified explicitly",
            "in": "formData",
            "name": "hidden",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Update license",
        "tags": [
          "License"
        ]
      }
    },
    "/licensee": {
      "get": {
        "description": "Return a list of all licensees for the current vendor",
        "operationId": "listLicensees",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "items": {
                "$ref": "#/definitions/netlicensing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Licensees list",
        "tags": [
          "Licensee"
        ]
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "description": "Creates a new licensee",
        "operationId": "createLicensee",
        "parameters": [
          {
            "description": "Unique number (across all products of a vendor) that identifies the licensee. Vendor can assign this number when creating a licensee or let NetLicensing generate one. Read-only after creation of the first license for the licensee",
            "in": "formData",
            "name": "number",
            "required": false,
            "type": "string"
          },
          {
            "description": "productNumber to create licensee object",
            "in": "formData",
            "name": "productNumber",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": " If set to false, the licensee is disabled. Licensee can not obtain new licenses, and validation is disabled",
            "in": "formData",
            "name": "active",
            "required": true,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Create licensee",
        "tags": [
          "Licensee"
        ]
      }
    },
    "/licensee/{licenseeNumber}": {
      "delete": {
        "description": "Delete a lecensee by number",
        "operationId": "deleteLicensee",
        "parameters": [
          {
            "description": "Unique number (across all products of a vendor) that identifies the licensee.",
            "in": "path",
            "name": "licenseeNumber",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "forceCascade",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Delete licensee",
        "tags": [
          "Licensee"
        ]
      },
      "get": {
        "description": "Get a licensee by licenseeNumber",
        "operationId": "getLicensee",
        "parameters": [
          {
            "description": "Unique number (across all products of a vendor) that identifies the licensee. Vendor can assign this number when creating a licensee or let NetLicensing generate one. Read-only after creation of the first license for the licensee.",
            "in": "path",
            "name": "licenseeNumber",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get licensee",
        "tags": [
          "Licensee"
        ]
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "description": "Sets the provided properties to a licensee. Return an updated licensee",
        "operationId": "updateLicensee",
        "parameters": [
          {
            "description": "Unique number (across all products of a vendor) that identifies the licensee. Vendor can assign this number when creating a licensee or let NetLicensing generate one. Read-only after creation of the first license for the licensee.",
            "in": "path",
            "name": "licenseeNumber",
            "required": true,
            "type": "string"
          },
          {
            "description": "Number to change the licensee.",
            "in": "formData",
            "name": "number",
            "required": false,
            "type": "string"
          },
          {
            "description": "If set to false, the licensee is disabled. Licensee can not obtain new licenses, and validation is disabled",
            "in": "formData",
            "name": "active",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "name": "name",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Update licensee",
        "tags": [
          "Licensee"
        ]
      }
    },
    "/licensee/{licenseeNumber}/validate": {
      "get": {
        "description": "Validate a licensee by licenseeNumber",
        "operationId": "validateLicensee",
        "parameters": [
          {
            "description": "Unique number (across all products of a vendor) that identifies the licensee. Vendor can assign this number when creating a licensee or let NetLicensing generate one. Read-only after creation of the first license for the licensee.",
            "in": "path",
            "name": "licenseeNumber",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Validate licensee",
        "tags": [
          "Licensee"
        ]
      }
    },
    "/licensetemplate": {
      "get": {
        "description": "Return a list of all license templates for the current vendor",
        "operationId": "listLicenseTemplates",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "items": {
                "$ref": "#/definitions/netlicensing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "License Templates list",
        "tags": [
          "License Template"
        ]
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "description": "Creates a new license template",
        "operationId": "createLicenseTemplate",
        "parameters": [
          {
            "description": "Number of product module to сreate license template object",
            "in": "formData",
            "name": "productModuleNumber",
            "required": true,
            "type": "string"
          },
          {
            "description": "lUnique number (across all products of a vendor) that identifies the license template. Vendor can assign this number when creating a license template or let NetLicensing generate one. Read-only after creation of the first license from this license template.",
            "in": "formData",
            "name": "number",
            "required": true,
            "type": "string"
          },
          {
            "description": "license template name to сreate license template object",
            "in": "formData",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "If set to false, the license template is disabled. Licensee can not obtain any new licenses off this license template.",
            "in": "formData",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "type of licenses created from this license template. Supported types: FEATURE, TIMEVOLUME",
            "in": "formData",
            "items": {
              "default": "FEATURE",
              "enum": [
                "FEATURE",
                "TIMEVOLUME",
                "FLOATING"
              ],
              "type": "string"
            },
            "name": "licenseType",
            "required": true,
            "type": "array"
          },
          {
            "description": "Mandatory for TIMEVOLUME licenseType",
            "in": "formData",
            "name": "timeVolume",
            "required": false,
            "type": "string"
          },
          {
            "description": "Mandatory for FLOATING licenseType",
            "in": "formData",
            "name": "maxSessions",
            "required": false,
            "type": "string"
          },
          {
            "description": "price for the license. If >0, it must always be accompanied by the currency specification.",
            "format": "double",
            "in": "formData",
            "name": "price",
            "required": false,
            "type": "number"
          },
          {
            "description": "specifies currency for the license price. Check data types to discover which currencies are supported.",
            "in": "formData",
            "name": "currency",
            "required": false,
            "type": "string"
          },
          {
            "description": "If set to true, every new licensee automatically gets one license out of this license template on creation. Automatic licenses must have their price set to 0.",
            "in": "formData",
            "name": "automatic",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "If set to true, this license template is not shown in NetLicensing Shop as offered for purchase.",
            "in": "formData",
            "name": "hidden",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "If set to true, licenses from this license template are not visible to the end customer, but participate in validation.",
            "in": "formData",
            "name": "hideLicenses",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Create license template",
        "tags": [
          "License Template"
        ]
      }
    },
    "/licensetemplate/{licenseTemplateNumber}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "description": "Delete a license template by number.",
        "operationId": "deleteLicenseTemplate",
        "parameters": [
          {
            "description": "Unique number (across all products of a vendor) that identifies the license template.",
            "in": "path",
            "name": "licenseTemplateNumber",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "forceCascade",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Delete license template",
        "tags": [
          "License Template"
        ]
      },
      "get": {
        "description": "Return a license template by licenseTemplateNumber",
        "operationId": "getLicenseTemplate",
        "parameters": [
          {
            "description": "Unique number (across all products of a vendor) that identifies the license template. Vendor can assign this number when creating a license template or let NetLicensing generate one. Read-only after creation of the first license from this license template.",
            "in": "path",
            "name": "licenseTemplateNumber",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get license template",
        "tags": [
          "License Template"
        ]
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "description": "Sets the provided properties to a license template. Return an updated license template",
        "operationId": "updateLicenseTemplate",
        "parameters": [
          {
            "description": "Unique number (across all products of a vendor) that identifies the license template. Vendor can assign this number when creating a license template or let NetLicensing generate one. Read-only after creation of the first license from this license template.",
            "in": "path",
            "name": "licenseTemplateNumber",
            "required": true,
            "type": "string"
          },
          {
            "description": "License template number to change.",
            "in": "formData",
            "name": "number",
            "required": false,
            "type": "string"
          },
          {
            "description": "Name for the licensed item",
            "in": "formData",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "If set to false, the license template is disabled. Licensee can not obtain any new licenses off this license template.",
            "in": "formData",
            "name": "active",
            "required": false,
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "type of licenses created from this license template. Supported types: FEATURE, TIMEVOLUME, FLOATING",
            "in": "formData",
            "items": {
              "default": "FEATURE",
              "enum": [
                "FEATURE",
                "TIMEVOLUME",
                "FLOATING"
              ],
              "type": "string"
            },
            "name": "licenseType",
            "required": false,
            "type": "array"
          },
          {
            "description": "Mandatory for TIMEVOLUME licenseType",
            "in": "formData",
            "name": "timeVolume",
            "required": false,
            "type": "string"
          },
          {
            "description": "Mandatory for FLOATING licenseType",
            "in": "formData",
            "name": "maxSessions",
            "required": false,
            "type": "string"
          },
          {
            "description": "Price for the license. If >0, it must always be accompanied by the currency specification.",
            "format": "double",
            "in": "formData",
            "name": "price",
            "required": false,
            "type": "number"
          },
          {
            "description": "Specifies currency for the license price. Check data types to discover which currencies are supported.",
            "in": "formData",
            "name": "currency",
            "required": false,
            "type": "string"
          },
          {
            "description": "If set to true, every new licensee automatically gets one license out of this license template on creation. Automatic licenses must have their price set to 0.",
            "in": "formData",
            "name": "automatic",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "If set to true, this license template is not shown in NetLicensing Shop as offered for purchase.",
            "in": "formData",
            "name": "hidden",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "If set to true, licenses from this license template are not visible to the end customer, but participate in validation.",
            "in": "formData",
            "name": "hideLicenses",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Update license template",
        "tags": [
          "License Template"
        ]
      }
    },
    "/paymentmethod": {
      "get": {
        "description": "Return a list of all payment methods for the current vendor",
        "operationId": "listPaymentMethods",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "items": {
                "$ref": "#/definitions/netlicensing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Payment Methods list",
        "tags": [
          "Payment Method"
        ]
      }
    },
    "/paymentmethod/{paymentMethodNumber}": {
      "get": {
        "description": "Return a payment method info by paymentMethodNumber",
        "operationId": "getPaymentMethod",
        "parameters": [
          {
            "description": "Payment method number",
            "in": "path",
            "name": "paymentMethodNumber",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get payment method",
        "tags": [
          "Payment Method"
        ]
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "description": "Sets the provided properties to a payment method. Return an updated payment method",
        "operationId": "updatePaymentMethod",
        "parameters": [
          {
            "description": "Payment method number",
            "in": "path",
            "name": "paymentMethodNumber",
            "required": true,
            "type": "string"
          },
          {
            "description": "If set to false, the payment method is disabled.",
            "in": "formData",
            "name": "active",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The e-mail address of the PayPal account for which you are making the API calls.",
            "in": "formData",
            "name": "paypal.subject",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Update payment method",
        "tags": [
          "Payment Method"
        ]
      }
    },
    "/product": {
      "get": {
        "description": "Return a list of all configured products for the current vendor",
        "operationId": "listProducts",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "items": {
                "$ref": "#/definitions/netlicensing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Products list",
        "tags": [
          "Product"
        ]
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "description": "Creates a new product",
        "operationId": "createProduct",
        "parameters": [
          {
            "description": "Unique number that identifies the product. Vendor can assign this number when creating a product or let NetLicensing generate one.",
            "in": "formData",
            "name": "number",
            "required": false,
            "type": "string"
          },
          {
            "description": "If set to false, the product is disabled. No new licensees can be registered for the product, existing licensees can not obtain new licenses.",
            "in": "formData",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "description": "Product name. Together with the version identifies the product for the end customer.",
            "in": "formData",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Product version. Convenience parameter, additional to the product name.",
            "in": "formData",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "If set to 'true', non-existing licensees will be created at first validation attempt.",
            "in": "formData",
            "name": "licenseeAutoCreate",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Product description. Optional.",
            "in": "formData",
            "name": "description",
            "required": false,
            "type": "string"
          },
          {
            "description": "Licensing information. Optional.",
            "in": "formData",
            "name": "licensingInfo",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Create product",
        "tags": [
          "Product"
        ]
      }
    },
    "/product/{productNumber}": {
      "delete": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "description": "Delete a product by number",
        "operationId": "deleteProduct",
        "parameters": [
          {
            "description": "Unique number that identifies the product.",
            "in": "path",
            "name": "productNumber",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "forceCascade",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Delete product",
        "tags": [
          "Product"
        ]
      },
      "get": {
        "description": "Return a product by productNumber",
        "operationId": "productNumber",
        "parameters": [
          {
            "description": "Unique number that identifies the product.",
            "in": "path",
            "name": "productNumber",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get product",
        "tags": [
          "Product"
        ]
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "description": "Sets the provided properties to a product. Return an updated product",
        "operationId": "updateProduct",
        "parameters": [
          {
            "description": "Number of product that identifies the product.",
            "in": "path",
            "name": "productNumber",
            "required": true,
            "type": "string"
          },
          {
            "description": "Number to update the product.",
            "in": "formData",
            "name": "number",
            "required": false,
            "type": "string"
          },
          {
            "description": "If set to false, the product is disabled. No new licensees can be registered for the product, existing licensees can not obtain new licenses.",
            "in": "formData",
            "name": "active",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Product name. Together with the version identifies the product for the end customer.",
            "in": "formData",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Product version. Convenience parameter, additional to the product name.",
            "in": "formData",
            "name": "version",
            "required": false,
            "type": "string"
          },
          {
            "description": "If set to 'true', non-existing licensees will be created at first validation attempt.",
            "in": "formData",
            "name": "licenseeAutoCreate",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Product description. Optional.",
            "in": "formData",
            "name": "description",
            "required": false,
            "type": "string"
          },
          {
            "description": "Licensing information. Optional.",
            "in": "formData",
            "name": "licensingInfo",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Update product",
        "tags": [
          "Product"
        ]
      }
    },
    "/productmodule": {
      "get": {
        "description": "Return a list of all product modules for the current vendor",
        "operationId": "listProductModules",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "items": {
                "$ref": "#/definitions/netlicensing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Product Modules list",
        "tags": [
          "Product Module"
        ]
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "description": "Creates a new product module",
        "operationId": "createProductModule",
        "parameters": [
          {
            "description": "Unique number (across all products of a vendor) that identifies the product module. Vendor can assign this number when creating a product module or let NetLicensing generate one. Read-only after creation of the first licensee for the product.",
            "in": "formData",
            "name": "productNumber",
            "required": true,
            "type": "string"
          },
          {
            "description": "Unique number (across all products of a vendor) that identifies the product module. Vendor can assign this number when creating a product module or let NetLicensing generate one. Read-only after creation of the first licensee for the product.",
            "in": "formData",
            "name": "number",
            "required": false,
            "type": "string"
          },
          {
            "description": "If set to false, the product module is disabled. Licensees can not obtain any new licenses for this product module.",
            "in": "formData",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "description": "Product module name that is visible to the end customers in NetLicensing Shop.",
            "in": "formData",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Licensing model applied to this product module. Defines what license templates can be configured for the product module and how licenses for this product module are processed during validation.",
            "in": "formData",
            "items": {
              "default": "Subscription",
              "enum": [
                "Subscription",
                "TryAndBuy",
                "Rental",
                "Floating"
              ],
              "type": "string"
            },
            "name": "licensingModel",
            "required": true,
            "type": "array"
          },
          {
            "description": "Mandatory for Floating licenseModel",
            "in": "formData",
            "name": "maxCheckoutValidity",
            "required": false,
            "type": "string"
          },
          {
            "description": "Mandatory for Rental licensingModel",
            "format": "int32",
            "in": "formData",
            "name": "yellowThreshold",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Mandatory for Rental licensingModel",
            "format": "int32",
            "in": "formData",
            "name": "redThreshold",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Create product module",
        "tags": [
          "Product Module"
        ]
      }
    },
    "/productmodule/{productModuleNumber}": {
      "delete": {
        "description": "Delete a product module by number",
        "operationId": "deleteProductModule",
        "parameters": [
          {
            "description": "Unique number (across all products of a vendor) that identifies the product module.",
            "in": "path",
            "name": "productModuleNumber",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "forceCascade",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Delete product module",
        "tags": [
          "Product Module"
        ]
      },
      "get": {
        "description": "Return a product module by productModuleNumber",
        "operationId": "getProductModule",
        "parameters": [
          {
            "description": "Unique number (across all products of a vendor) that identifies the product module. Vendor can assign this number when creating a product module or let NetLicensing generate one. Read-only after creation of the first licensee for the product.",
            "in": "path",
            "name": "productModuleNumber",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get product module",
        "tags": [
          "Product Module"
        ]
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "description": "Sets the provided properties to a product module. Return an updated product module",
        "operationId": "updateProductModule",
        "parameters": [
          {
            "description": "Unique number (across all products of a vendor) that identifies the product module. Vendor can assign this number when creating a product module or let NetLicensing generate one. Read-only after creation of the first licensee for the product.",
            "in": "path",
            "name": "productModuleNumber",
            "required": true,
            "type": "string"
          },
          {
            "description": "Number to change the product module.",
            "in": "formData",
            "name": "number",
            "required": false,
            "type": "string"
          },
          {
            "description": "If set to false, the product module is disabled. Licensees can not obtain any new licenses for this product module.",
            "in": "formData",
            "name": "active",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Product module name that is visible to the end customers in NetLicensing Shop.",
            "in": "formData",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Licensing model applied to this product module. Defines what license templates can be configured for the product module and how licenses for this product module are processed during validation.",
            "in": "formData",
            "items": {
              "default": "Subscription",
              "enum": [
                "Subscription",
                "TryAndBuy",
                "Rental",
                "Floating"
              ],
              "type": "string"
            },
            "name": "licensingModel",
            "required": false,
            "type": "array"
          },
          {
            "description": "Mandatory for Floating licenseModel",
            "in": "formData",
            "name": "maxCheckoutValidity",
            "required": false,
            "type": "string"
          },
          {
            "description": "Mandatory for TryAndBuy licensingModel",
            "in": "formData",
            "items": {
              "default": "TIMEVOLUME",
              "enum": [
                "TIMEVOLUME",
                "FEATURE"
              ],
              "type": "string"
            },
            "name": "licenseTemplate",
            "required": false,
            "type": "array"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Update product module",
        "tags": [
          "Product Module"
        ]
      }
    },
    "/token": {
      "get": {
        "description": "Return a list of all tokens for the current vendor",
        "operationId": "listTokens",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "items": {
                "$ref": "#/definitions/netlicensing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Tokens list",
        "tags": [
          "Token"
        ]
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "description": "Create token by tokenType and additional token parameters",
        "operationId": "createToken",
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Token type to be generated",
            "enum": [
              "DEFAULT",
              "SHOP",
              "APIKEY"
            ],
            "in": "formData",
            "name": "tokenType",
            "required": true,
            "type": "string"
          },
          {
            "description": "Mandatory for <i>tokenType=SHOP</i> only, identifies licensee that will be assigned to the shop token",
            "in": "formData",
            "name": "licenseeNumber",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "api_key": [],
            "basicAuth": []
          }
        ],
        "summary": "Create token",
        "tags": [
          "Token"
        ]
      }
    },
    "/token/{tokenNumber}": {
      "delete": {
        "description": "Delete a token by number",
        "operationId": "deleteToken",
        "parameters": [
          {
            "description": "Token number",
            "in": "path",
            "name": "tokenNumber",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Delete token",
        "tags": [
          "Token"
        ]
      },
      "get": {
        "description": "Return a token by tokenNumber",
        "operationId": "getToken",
        "parameters": [
          {
            "description": "Token number",
            "in": "path",
            "name": "tokenNumber",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get token",
        "tags": [
          "Token"
        ]
      }
    },
    "/transaction": {
      "get": {
        "description": "Return a list of all transactions for the current vendor",
        "operationId": "listTransactions",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "items": {
                "$ref": "#/definitions/netlicensing"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Transactions list",
        "tags": [
          "Transaction"
        ]
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "description": "Creates a new transaction",
        "operationId": "createTransaction",
        "parameters": [
          {
            "in": "formData",
            "name": "licenseeNumber",
            "required": true,
            "type": "string"
          },
          {
            "description": "Unique number (across all products of a vendor) that identifies the transaction",
            "in": "formData",
            "name": "number",
            "required": false,
            "type": "string"
          },
          {
            "description": "always true for transactions",
            "in": "formData",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "enum": [
              "CANCELLED",
              "CLOSED",
              "PENDING"
            ],
            "in": "formData",
            "name": "status",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "AUTO transaction for internal use only",
            "enum": [
              "SHOP"
            ],
            "in": "formData",
            "name": "source",
            "required": true,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "formData",
            "name": "dateCreated",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "formData",
            "name": "dateClosed",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "paymentMethod",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Create transaction",
        "tags": [
          "Transaction"
        ]
      }
    },
    "/transaction/{transactionNumber}": {
      "get": {
        "description": "Return a transaction by transactionNumber",
        "operationId": "getTransaction",
        "parameters": [
          {
            "description": "Unique number (across all products of a vendor) that identifies the transaction",
            "in": "path",
            "name": "transactionNumber",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get transaction ",
        "tags": [
          "Transaction"
        ]
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "description": "Sets the provided properties to a transaction. Return an updated transaction",
        "operationId": "updateTransaction",
        "parameters": [
          {
            "description": "Unique number (across all products of a vendor) that identifies the transaction",
            "in": "path",
            "name": "transactionNumber",
            "required": true,
            "type": "string"
          },
          {
            "description": "Unique number (across all products of a vendor) that identifies the transaction",
            "in": "formData",
            "name": "number",
            "required": false,
            "type": "string"
          },
          {
            "description": "always true for transactions",
            "in": "formData",
            "name": "active",
            "required": false,
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "enum": [
              "CANCELLED",
              "CLOSED",
              "PENDING"
            ],
            "in": "formData",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "AUTO transaction for internal use only",
            "enum": [
              "SHOP"
            ],
            "in": "formData",
            "name": "source",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "formData",
            "name": "dateCreated",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "formData",
            "name": "dateClosed",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "paymentMethod",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Update transaction",
        "tags": [
          "Transaction"
        ]
      }
    },
    "/utility/licenseTypes": {
      "get": {
        "description": "Return a list of all license types supported by the service",
        "operationId": "licenseTypes",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "License Types list",
        "tags": [
          "Utility"
        ]
      }
    },
    "/utility/licensingModels": {
      "get": {
        "description": "Return a list of all licensing models supported by the service",
        "operationId": "licensingModels",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/netlicensing"
            }
          },
          "400": {
            "description": "Malformed or illegal request"
          },
          "403": {
            "description": "Access is denied"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal service error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Licensing Models list",
        "tags": [
          "Utility"
        ]
      }
    }
  },
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "api_key": {
      "in": "header",
      "name": "api_key",
      "type": "apiKey"
    },
    "basicAuth": {
      "description": "HTTP Basic Authentication. Works over `HTTP` and `HTTPS`",
      "type": "basic"
    }
  },
  "swagger": "2.0",
  "tags": [
    {
      "description": "Product operations",
      "externalDocs": {
        "description": "Product Services",
        "url": "https://www.labs64.de/confluence/x/qACo"
      },
      "name": "Product"
    },
    {
      "description": "Product Module operations",
      "externalDocs": {
        "description": "Product Module Services",
        "url": "https://www.labs64.de/confluence/x/qwCo"
      },
      "name": "Product Module"
    },
    {
      "description": "License Template operations",
      "externalDocs": {
        "description": "License Template Services",
        "url": "https://www.labs64.de/confluence/x/rQCo"
      },
      "name": "License Template"
    },
    {
      "description": "Licensee operations",
      "externalDocs": {
        "description": "Licensee Services",
        "url": "https://www.labs64.de/confluence/x/qQCo"
      },
      "name": "Licensee"
    },
    {
      "description": "License operations",
      "externalDocs": {
        "description": "License Services",
        "url": "https://www.labs64.de/confluence/x/rACo"
      },
      "name": "License"
    },
    {
      "description": "Transaction operations",
      "externalDocs": {
        "description": "Transaction Services",
        "url": "https://www.labs64.de/confluence/x/qgCo"
      },
      "name": "Transaction"
    },
    {
      "description": "Token operations",
      "externalDocs": {
        "description": "Token Services",
        "url": "https://www.labs64.de/confluence/x/rwCo"
      },
      "name": "Token"
    },
    {
      "description": "Payment Method operations",
      "externalDocs": {
        "description": "Payment Method Services",
        "url": "https://www.labs64.de/confluence/x/sACo"
      },
      "name": "Payment Method"
    },
    {
      "description": "Utility operations",
      "externalDocs": {
        "description": "Utility Services",
        "url": "https://www.labs64.de/confluence/x/rgCo"
      },
      "name": "Utility"
    }
  ]
}
